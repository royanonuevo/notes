name: Deploy To ECS

on:
  push:
    branches: 
      - main

env:
  # Setting an environment variable with the value of a configuration variable
  ECR_IMAGE_NAME: ${{ vars.ECR_IMAGE_NAME }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECS_CLUSTER_NAME: ${{ vars.ECS_CLUSTER_NAME }}
  ECS_SERVICE_NAME: ${{ vars.ECS_SERVICE_NAME }}

jobs:
  build-and-push:
    name: build and deploy image
    runs-on: ubuntu-latest
    
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      # - 
      #   name: Set up QEMU for arm64
      #   run: |
      #     docker run --rm --privileged multiarch/aws-cicd-nextjs --reset -p yes
      #   if: runner.os == 'Linux'
      # - 
      #   name: Set up Docker for arm64
      #   uses: docker/setup-qemu-action@v2
      #   with:
      #     platforms: linux/arm64
      - 
        name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
      - 
        name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - 
        name: Build and push Docker Image
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build  -f Dockerfile.prod -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_IMAGE_NAME:latest --push .
      - 
        name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster ${{ vars.ECS_CLUSTER_NAME }} --service ${{ vars.ECS_SERVICE_NAME }} --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
